;; Analyzed by ClojureScript 0.0-3308
{:name playground.task1.err, :doc nil, :excludes #{}, :use-macros {go cljs.core.async.macros}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :uses {<! cljs.core.async}, :requires {async cljs.core.async, cljs.core.async cljs.core.async}, :imports nil, :defs {is-err {:protocol-inline nil, :meta {:file "/home/user/projects/imperative-nodejs/playground/src/playground/task1/err.cljs", :line 6, :column 7, :end-line 6, :end-column 13, :arglists (quote ([x]))}, :name playground.task1.err/is-err, :variadic false, :file "src/playground/task1/err.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, throw-err {:protocol-inline nil, :meta {:file "/home/user/projects/imperative-nodejs/playground/src/playground/task1/err.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([x]))}, :name playground.task1.err/throw-err, :variadic false, :file "src/playground/task1/err.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, lift {:protocol-inline nil, :meta {:file "/home/user/projects/imperative-nodejs/playground/src/playground/task1/err.cljs", :line 16, :column 7, :end-line 16, :end-column 11, :arglists (quote ([f]))}, :name playground.task1.err/lift, :variadic false, :file "src/playground/task1/err.cljs", :end-column 11, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}}}