;; Analyzed by ClojureScript 0.0-3308
{:use-macros {go cljs.core.async.macros, <? playground.node-lib.macros, go? playground.node-lib.macros, go-loop? playground.node-lib.macros}, :excludes #{}, :name playground.task2.cljs-async, :imports nil, :requires {async cljs.core.async, cljs.core.async cljs.core.async, err playground.node-lib.errors, playground.node-lib.errors playground.node-lib.errors, fs playground.node-lib.fs, playground.node-lib.fs playground.node-lib.fs}, :uses nil, :defs {<next-number {:protocol-inline nil, :meta {:file "/home/user/projects/imperative-nodejs/playground/src/playground/task2/cljs_async.cljs", :line 10, :column 8, :end-line 10, :end-column 20, :private true, :arglists (quote ([x]))}, :private true, :name playground.task2.cljs-async/<next-number, :variadic false, :file "src/playground/task2/cljs_async.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, traverse {:protocol-inline nil, :meta {:file "/home/user/projects/imperative-nodejs/playground/src/playground/task2/cljs_async.cljs", :line 15, :column 7, :end-line 15, :end-column 15, :arglists (quote ([k]))}, :name playground.task2.cljs-async/traverse, :variadic false, :file "src/playground/task2/cljs_async.cljs", :end-column 15, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, playground.node-lib.macros playground.node-lib.macros}, :cljs.analyzer/constants {:seen #{:else :recur}, :order [:recur :else]}, :doc nil}