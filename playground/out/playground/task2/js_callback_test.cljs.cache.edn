;; Analyzed by ClojureScript 0.0-3308
{:use-macros {is cljs.test, deftest cljs.test}, :excludes #{}, :name playground.task2.js-callback-test, :imports nil, :requires {t cljs.test, cljs.test cljs.test, playground.task2.test-utils playground.task2.test-utils}, :uses {mock-readFile-fixture playground.task2.test-utils}, :defs {traverse {:name playground.task2.js-callback-test/traverse, :file "test/playground/task2/js_callback_test.cljs", :line 5, :column 1, :end-line 5, :end-column 24, :private true, :meta {:file "/home/user/projects/imperative-nodejs/playground/test/playground/task2/js_callback_test.cljs", :line 5, :column 16, :end-line 5, :end-column 24, :private true}}, cljs-test-each-fixtures {:name playground.task2.js-callback-test/cljs-test-each-fixtures, :meta {:file nil}, :file "test/playground/task2/js_callback_test.cljs", :line 7, :column 1}, traverse-ok {:protocol-inline nil, :meta {:file "/home/user/projects/imperative-nodejs/playground/test/playground/task2/js_callback_test.cljs", :line 10, :column 10, :end-line 10, :end-column 21}, :name playground.task2.js-callback-test/traverse-ok, :variadic false, :file "test/playground/task2/js_callback_test.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, t10209 {:num-fields 1, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name playground.task2.js-callback-test/t10209, :file "test/playground/task2/js_callback_test.cljs", :type true, :anonymous true, :column 3, :line 11, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, ->t10209 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta10210])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name playground.task2.js-callback-test/->t10209, :variadic false, :file "test/playground/task2/js_callback_test.cljs", :method-params ([meta10210]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta10210])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, traverse-no-file {:protocol-inline nil, :meta {:file "/home/user/projects/imperative-nodejs/playground/test/playground/task2/js_callback_test.cljs", :line 19, :column 10, :end-line 19, :end-column 26}, :name playground.task2.js-callback-test/traverse-no-file, :variadic false, :file "test/playground/task2/js_callback_test.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}, t10229 {:num-fields 1, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name playground.task2.js-callback-test/t10229, :file "test/playground/task2/js_callback_test.cljs", :type true, :anonymous true, :column 3, :line 20, :record false, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}, ->t10229 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta10230])), :file nil}, :protocols #{cljs.core/IFn cljs.core/IMeta cljs.test/IAsyncTest cljs.core/IWithMeta}, :name playground.task2.js-callback-test/->t10229, :variadic false, :file "test/playground/task2/js_callback_test.cljs", :method-params ([meta10230]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta10230])), :skip-protocol-flag #{cljs.core/IFn cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {t cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:ns :name :file :end-column :type :column :fail :line :expected :end-line :error :pass :arglists :actual :doc :test :message}, :order [:type :expected :actual :message :error :pass :fail :ns :name :file :end-column :column :line :end-line :arglists :doc :test]}, :doc nil}